const Comment = require("../models/Comment");

// üìå API l·∫•y t·∫•t c·∫£ b√¨nh lu·∫≠n c·ªßa m·ªôt b√†i post (bao g·ªìm ph·∫£n h·ªìi)
const getCommentsByPostId = async (req, res) => {
  try {
    const { postId } = req.query;

    console.log("ƒêang t√¨m comment theo postId:", postId);

    const comments = await Comment.find({ postId, parentId: null })
      .populate({
        path: "replies",
        populate: { path: "replies" },
      })
      .sort({ createdAt: -1 });

    res.status(200).json(comments);
  } catch (error) {
    console.error("L·ªói khi l·∫•y b√¨nh lu·∫≠n:", error.message);
    res.status(500).json({ message: "L·ªói server", error: error.message });
  }
};

// üìå API l·∫•y to√†n b·ªô b√¨nh lu·∫≠n (bao g·ªìm th√¥ng tin b√†i post)
const getComment = async (req, res) => {
  try {
    const comments = await Comment.find().populate("postId");
    res.json(comments);
  } catch (error) {
    res.status(500).json({ error: "L·ªói server khi l·∫•y b√¨nh lu·∫≠n" });
    console.log(error);
  }
};

// üìå API th√™m b√¨nh lu·∫≠n ho·∫∑c ph·∫£n h·ªìi
const addComment = async (req, res) => {
  try {
    const { postId, userId, text, parentId } = req.body;

    if (!text) {
      return res.status(400).json({ message: "N·ªôi dung kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!" });
    }

    const newComment = new Comment({ postId, userId, text, parentId });
    await newComment.save();

    res.status(201).json({ ...newComment.toObject(), postId }); // ƒê·∫£m b·∫£o tr·∫£ v·ªÅ postId
  } catch (error) {
    console.error("L·ªói khi th√™m b√¨nh lu·∫≠n:", error);
    res.status(500).json({ message: "L·ªói server" });
  }
};


// üìå API x√≥a b√¨nh lu·∫≠n
const deleteComment = async (req, res) => {
  try {
    const { commentId } = req.params;

    const deletedComment = await Comment.findByIdAndDelete(commentId);
    if (!deletedComment) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y b√¨nh lu·∫≠n!" });
    }

    res.status(200).json({ message: "X√≥a b√¨nh lu·∫≠n th√†nh c√¥ng!" });
  } catch (error) {
    console.error("L·ªói khi x√≥a b√¨nh lu·∫≠n:", error);
    res.status(500).json({ message: "L·ªói server" });
  }
};

module.exports = { getCommentsByPostId, addComment, getComment, deleteComment };
